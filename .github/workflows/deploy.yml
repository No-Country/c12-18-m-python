name: Manual Workflow

on:
  workflow_dispatch:

jobs:
  build:
    name: Build and push Docker images
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with: 
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
      

      - name: Login to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Cleanup old images in frontend ECR
        env:
          AWS_REGION: us-west-2
          ECR_REPOSITORY_NAME: frontend    
        run: |
          IMAGE_TAG=v2  # Cambia esto por la etiqueta de la imagen que quieres eliminar (en este caso, v2)
          # Get the list of images in the repository
          IMAGES=$(aws ecr list-images --repository-name $ECR_REPOSITORY_NAME --query 'imageIds[*].imageTag' --output text)
          
          # Check if the current image tag already exists in the repository
          if echo "$IMAGES" | grep -q "$IMAGE_TAG"; then
            # Delete the old image
            aws ecr batch-delete-image --repository-name $ECR_REPOSITORY_NAME --image-ids imageTag=$IMAGE_TAG
          fi

      - name: Cleanup old images in backend ECR
        env:
          AWS_REGION: us-west-2
          ECR_REPOSITORY_NAME: server   
        run: |
          IMAGE_TAG=v2  # Cambia esto por la etiqueta de la imagen que quieres eliminar (en este caso, v2)
          # Get the list of images in the repository
          IMAGES=$(aws ecr list-images --repository-name $ECR_REPOSITORY_NAME --query 'imageIds[*].imageTag' --output text)
          
          # Check if the current image tag already exists in the repository
          if echo "$IMAGES" | grep -q "$IMAGE_TAG"; then
            # Delete the old image
            aws ecr batch-delete-image --repository-name $ECR_REPOSITORY_NAME --image-ids imageTag=$IMAGE_TAG
          fi

      - name: Build and push frontend Docker image
        env:
          ECR_REGISTRY: 236649525998.dkr.ecr.us-west-2.amazonaws.com          
        run: |          
          docker build --no-cache -t frontend ./frontend
          docker tag frontend $ECR_REGISTRY/frontend:v2
          docker push $ECR_REGISTRY/frontend:v2
          
      - name: Build and push backend Docker image
        env:
          ECR_REGISTRY: 236649525998.dkr.ecr.us-west-2.amazonaws.com          
        run: |          
          docker build --no-cache -t server ./server
          docker tag server $ECR_REGISTRY/server:v3
          docker push $ECR_REGISTRY/server:v3

           
         
          
